@import "common.less";
@import "variables.less";

.inactive-hover {
  border: 1px solid @btn-sidebar-hover;
  color:@fontcolor-hover-sidebar;
}

.generate-panels(@counter) when (@counter > 0) {
  .sidebar-panel-@{counter} {
    left: (196px * (@counter - 1) + @sidebarwidth);
  }
  .generate-panels((@counter - 1));
}

.sidebar {
  .sidebar-ul {
    list-style-type: none;
    margin: 0;
  }

  .noselect;
  position: absolute;
  top: 0;
  bottom: 0;

  // this should be on top of the file browser!
  z-index: 1000;

  .sidebar-outer {
    height: 100%;

    &.hidden {
      display: none;
    }

    .sidebar-main {
      width: (@sidebarwidth - 1); // account for the border
      text-align: center;
      .linear-gradient(@bg-sidebar, to right, rgba(52, 52, 52, 1) 34%, rgba(70, 70, 68, 1) 100%);
      border-right: 1px solid #e6e8ea;
      height: 100%;

      .sidebar-spacer {
        height: 20px;
      }

      .sidebar-element {
        font-size: 11px;
        color: @fontcolor-sidebar;
        padding-top: 10px;
        height: 50px;
        cursor: pointer;
        display: block;
        text-decoration: none;

        // This handles the selected color for currently active sidebar elements
        &.selected {

          span {
            padding: 3px;
          }
          .sidebar-element-icon {
            .sidebar-element-icon-inner {
              color: @bg-sidebar;
              border: 1px solid @btn-selected-sidebar;
              background-color: @btn-selected-sidebar;
              &:hover {
                border: 1px solid @btn-selected-sidebar;
              }
            }
          }
        }

        // This handles the case when you hover on the label for the icon, it should add the
        // border to the circle rather than text / div surrounding the circle.
        &:hover:not(.selected) {
          color: @fontcolor-hover-sidebar;
          .sidebar-element-icon {
            .sidebar-element-icon-inner {
              .inactive-hover;
            }
          }
        }

        .sidebar-element-icon {
          .sidebar-element-icon-inner {
            height: 30px;
            width: 30px;
            border-radius: 50%;
            border: 1px solid @btn-outline-sidebar;
            background-color: @btn-bg-color-sidebar;
            display: inline-block;
            i, img {
              position: relative;
              top: 50%;
              transform: translateY(-60%);
              margin-left: 1px;
              margin-bottom: 5px;
              font-size: 14px;

              // Overrides for asymmetric icons
              &.fa {
                top: 14px;
              }
              &.fa-folder-open-o {
                margin-left: 3px;
              }
              &.fa-search {
                margin-left: 2px;
                top: 13px;
              }
            }
            img {
              transform: translateY(-50%);
            }
            &:hover {
              .inactive-hover;
              color: @bg-sidebar;
            }
          }
        }
      }
    }

    .sidebar-panel {
      top: 0px;
      width: 196px;
      .sidebar-panel-element {
        .noselect;
        font-size: 14px;
        font-weight: 200;

        .table-cache {
          position: absolute;
          right: 27px;
        }
      }
    }

    // Generate 10 panels with different left offsets
    .generate-panels(10);
  }
}

// CSS animations for the new React sidebar panels. Uses a transition group.
.sidebar-panel {
  z-index: -1;
}

.sidebar-panel-enter {
  left: -126px !important;
}

.sidebar-panel-enter.sidebar-panel-enter-active {
  left: @sidebarwidth !important;
  transition: all 250ms;
}

.sidebar-panel-leave {
  left: @sidebarwidth !important;
}

.sidebar-panel-leave.sidebar-panel-leave-active {
  left: (@sidebarwidth - @panelwidth) !important;
  transition: all 250ms;
}
