@tooltip-min-width: 180px;
@tooltip-max-width: 260px;

/* outer div covering the outer element the tooltip is for and the tooltip itself */
.tooltip-react-outer, .body-tooltip-wrapper {
  display: inline-block;
  white-space: normal;

  /* A width is needed for body-attached tooltips in order to trigger the mouse leave event */
  &.body-tooltip-outer {
    width: 50px;
  }

  /* a tooltip below the element */
  .tooltip-react-content {
    display: block;
    position: absolute;
    width: @tooltip-max-width;
    z-index: -1000;
    opacity: 0;
    transform: translateY(-10px);

    a {
      color: @tooltipLinkColor;
    }

    /**
     * When a tooltip becomes visible, bring it into the foreground, make it visible,
     * and move it down a little bit so it "slides" down from the element it is pointing to.
     */
    &.visible {
      opacity: 0.9;
      z-index: 1000; /* must be lower than the .modal-backdrop so it doesn't cover modals */
      transform: translateY(0px);
      transition: opacity .25s ease-out, transform .25s ease-out;
    }

    /**
     * When a tooltip becomes hidden, delay the transition a little bit and change the z-index
     * slowly so that the user has some time to move the mouse into the tooltip to select text
     */
    &:not(.visible) {
      transition: opacity .25s ease-out 0.1s, transform .25s ease-out 0.1s, z-index 0.5s ease-out;
    }

    /* the css arrow that points to the element the tooltip is below */
    .tooltip-react-arrow {
      position: absolute;
      top: -6px;
      pointer-events: none;
      content: " ";
      height: 0;
      width: 0;
      border: solid transparent;
      border-bottom-color: #272727;
      border-width: 6px;
      margin-left: -6px;
    }

    /* the content box for the tooltip */
    .tooltip-react-inner {
      position: absolute;
      top: 6px;
      text-align: left;
      word-wrap: break-word;
      min-width: @tooltip-min-width;
      max-width: @tooltip-max-width;
      border-radius: 5px;
      box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.1);
      background: #272727;
      color: #ffffff;
      padding: 5px 10px;
      .canselect;
    }

    /**
     * @WARNING
     * DO NOT DO THIS HACK AGAIN!!!!!
     * We need it because jQuery depends on min width for calculating the width of tooltips, but
     * some tooltips are smaller than the min width of 180px and so to be rendered properly they
     * should have no min width set. See PROD-12291
     *
     * Class for small tooltips that shouldn't have a min width
     */
    .tooltip-no-min-width {
      min-width: 0 !important;
    }
  }

  &.inline-auto-position {
    display: inline-block;
    position: relative;

    .tooltip-react-content {
      position: absolute;
      top: 100% !important;
      left: calc(~'50%' - (@tooltip-max-width / 2)) !important;
    }
  }
}
