/*!

 * Customization on Bootstrap by Joy  
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

//import bootstrap
// @import "bootstrap/bootstrap.less";

@import "variables.less";

// mixin
.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

.opacity(@opacity) {
  opacity: @opacity;
  // IE8 filter
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}

.set-modal-width(@width) {
  width: @width !important;
  margin-left: -(@width / 2) !important;
}

// .box-shadow(@shadow: 0 1px 3px rgba(0,0,0,.25)) {
//   -webkit-box-shadow: @shadow;
//      -moz-box-shadow: @shadow;
//           box-shadow: @shadow;
// }

.transition(@transition) {
  -webkit-transition: @transition;
     -moz-transition: @transition;
      -ms-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}

.color-status .status_green{
  color:@green;
}

.color-status .status_orange{
  color:@yellow;
}

.color-status .status_pink{
  color:@red-light;
}

.color-status .status_grey{
  color:@black-alpha-200;
}

.color-status .status_ban{
  color:@black-alpha-800;
}

.color-status{
  border: 1px solid #e6e8ea;
    margin: 5px;
    padding: 8px 12px;

}

// alert.less
// .alert{
// 	padding: @padding-small-vertical @alert-padding;
// 	border: 1px solid transparent;
// 	border-radius: @alert-border-radius;
// 	margin: @margin-base;
// }

// .alert-dismiss{
// 	padding-right: (@alert-padding + 20);

// 	.close {
// 		position:relative;
// 		top:-2px;
// 		right: -21px;
// 		color: inherit;
// 	}
// }

// .alert-success{
// 	background-color: @alert-success-bg;
// 	border-color: @alert-success-border; 
// 	color: @alert-success-text;
// }

// .alert-info {
// 	background-color: @alert-info-bg;
// 	border-color: @alert-info-border; 
// 	color: @alert-info-text;
// }

// .alert-warning {
// 	background-color: @alert-warning-bg;
// 	border-color: @alert-warning-border; 
// 	color: @alert-warning-text;
// }

// .alert-danger {
// 	background-color: @alert-danger-bg;
// 	border-color: @alert-danger-border; 
// 	color: @alert-danger-text;
  
// }


// // badge.less
// .badge{
// 	display: inline-block;

// 	color: @badge-color;
// 	border-radius: @badge-border-radius;
// 	background-color: @badge-bg;
// 	font-size: @font-size-h6;	
// 	// line-height: @badge-line-height;
// 	padding: @padding-small;
// 	text-align: center;

// }

// button.less


.btn{
	display: inline-block;
	padding: @padding-base-vertical @padding-base-horizontal;
	font-size: @font-size-base;
	border-radius: @border-radius-base;

	&:focus{
		outline: 0;
	}
  
	&.disabled,
  	&[disabled],
  	fieldset[disabled] & {
	    cursor: @cursor-disabled;
	    opacity:@disable-opacity;
  	}

	a& {
	  &.disabled,
	  fieldset[disabled] & {
	    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
	  }
	}
}


.btn-default {
  	color: @btn-default-color; 
  	background-color: @btn-default-bg; 
  	border-color:@btn-default-border;

  	&:hover,
    &:focus{
    	&:not([disabled]){
    		background-color: @btn-default-hover;
    	}
    }
}

// Action button highlighted 
.btn-primary {
	color: @btn-primary-color; 
  	background-color: @btn-primary-bg; 
  	border-color:@btn-primary-border;

  	&:hover,
    &:focus{
    	&:not([disabled]){
    		background-color: @btn-primary-hover;
    	}
    }
}

// Danger and error appear as red
.btn-danger {
	color: @btn-danger-color; 
  	background-color: @btn-danger-bg; 
  	border-color:@btn-danger-border;

  	&:hover,
    &:focus{
    	&:not([disabled]){
    		background-color: @btn-danger-hover;
    	}
    } 
}

.btn-link{
	color: @link-color;
	border-radius: 0;
	background-color: transparent;

  	&:hover,
    &:focus{
    	&:not([disabled]){
    		color:@link-hover-color;
    	}
    }
}

// //== Dropdowns
// //
// //## Dropdown menu container and contents.
// .box-shadow (@x: 0px, @y: 3px, @blur: 5px, @alpha: 0.5) {
// 	-webkit-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
// 	-moz-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
// 	box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
// }


// .nav-divider(@color: #e5e5e5) {
//   height: 1px;
//   margin: ((@line-height-computed / 2) - 1) 0;
//   overflow: hidden;
//   background-color: @color;
// }

// // Reset filters for IE
// //
// // When you need to remove a gradient background, do not forget to use this to reset
// // the IE filter for IE9 and below.

// .reset-filter() {
//   filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
// }

// .dropup,
// .dropdown {
//   position: relative;

// }

// // Prevent the focus on the dropdown toggle when closing dropdowns
// .dropdown-toggle:focus {
//   outline: 0;
// }


// // The dropdown menu (ul)
// .dropdown-menu {
//   position: absolute;
//   top: 100%;
//   left: 0;
//   z-index: @zindex-dropdown;
//   display: none; // none by default, but block on "open" of the menu
//   float: left;
//   min-width: 160px;
//   padding: 5px 0;
//   margin: 2px 0 0; // override default ul
//   list-style: none;
//   font-size: @font-size-base;
//   text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
//   background-color: @dropdown-bg;
//   border: 1px solid @dropdown-fallback-border; // IE8 fallback
//   border: 1px solid @dropdown-border;
//   border-radius: @border-radius-base;
//   .box-shadow(0 6px 12px rgba(0,0,0,.175));
//   background-clip: padding-box;

//   // Dividers (basically an hr) within the dropdown
//   .divider {
//   	.nav-divider(@dropdown-divider-bg);
//   }

//   // Links within the dropdown menu
//   > li > a {
//     display: block;
//     padding: 3px 20px;
//     clear: both;
//     font-weight: normal;
//     line-height: @line-height-base;
//     color: @dropdown-link-color;
//     white-space: nowrap; // prevent links from randomly breaking onto new lines
//   }

// }

// // Hover/Focus state
// .dropdown-menu > li > a {
//   &:hover,
//   &:focus {
//     text-decoration: none;
//     color: @dropdown-link-hover-color;
//     background-color: @dropdown-link-hover-bg;
//   }
// }

// // Active state
// .dropdown-menu > .active > a {
//   &,
//   &:hover,
//   &:focus {
//     color: @dropdown-link-active-color;
//     text-decoration: none;
//     outline: 0;
//     background-color: @dropdown-link-active-bg;
//   }
// }

// // Disabled state
// //
// // Gray out text and ensure the hover/focus state remains gray

// .dropdown-menu > .disabled > a {
//   &,
//   &:hover,
//   &:focus {
//     color: @dropdown-link-disabled-color;
//   }

//   // Nuke hover/focus effects
//   &:hover,
//   &:focus {
//     text-decoration: none;
//     background-color: transparent;
//     background-image: none; // Remove CSS gradient
//     .reset-filter();
//     cursor: @cursor-disabled;
//   }
// }

// .clearfix {
//   .clearfix();
// }

// //
// // Modals
// // --------------------------------------------------

// // .modal-open      - body class for killing the scroll
// // .modal           - container to scroll within
// // .modal-dialog    - positioning shell for the actual modal
// // .modal-content   - actual modal w/ bg and corners and shit

// // Kill the scroll on the body

// .translate(@x: 0, @y: 0) {
//   -webkit-transform: translate(@x, @y);
//      -moz-transform: translate(@x, @y);
//       -ms-transform: translate(@x, @y);
//        -o-transform: translate(@x, @y);
//           transform: translate(@x, @y);
// }


// .modal-open {
//   overflow: hidden;
// }

// // Container that the modal scrolls within
// .modal {
//   display: none;
//   overflow: hidden;
//   position: fixed;
//   top: 0;
//   right: 0;
//   bottom: 0;
//   left: 0;
//   z-index: @zindex-modal;
//   -webkit-overflow-scrolling: touch;

//   // Prevent Chrome on Windows from adding a focus outline. For details, see
//   // https://github.com/twbs/bootstrap/pull/10951.
//   outline: 0;

//   // When fading in the modal, animate it to slide down
//   &.fade .modal-dialog {
//     // .translate(0, -25%);
//     // .transition-transform(~"0.3s ease-out");
//   }
//   &.in .modal-dialog { .translate(0, 0) }
// }
// .modal-open .modal {
//   overflow-x: hidden;
//   overflow-y: auto;
// }

// // Shell div to position the modal with bottom padding
// .modal-dialog {
//   position: relative;
//   width: auto;
//   margin: 10px;
// }

// // Actual modal
// .modal-content {
//   position: relative;
//   background-color: @modal-content-bg;
//   border: 1px solid @modal-content-fallback-border-color; //old browsers fallback (ie8 etc)
//   border: 1px solid @modal-content-border-color;
//   border-radius: @border-radius-large;
//   .box-shadow(0 3px 9px rgba(0,0,0,.5));
//   background-clip: padding-box;
//   // Remove focus outline from opened modal
//   outline: 0;
// }

// // Modal background
// .modal-backdrop {
//   position: fixed;
//   top: 0;
//   right: 0;
//   bottom: 0;
//   left: 0;
//   z-index: @zindex-modal-background;
//   background-color: @modal-backdrop-bg;
//   // Fade for backdrop
//   &.fade { .opacity(0); }
//   &.in { .opacity(@modal-backdrop-opacity); }
// }

// // Modal header
// // Top section of the modal w/ title and dismiss
// .modal-header {
//   padding: @modal-title-padding;
//   border-bottom: 1px solid @modal-header-border-color;
//   &:extend(.clearfix all);
// }
// // Close icon
// // .modal-header .close {
// //   margin-top: -2px;
// // }

// // Title text within header
// .modal-title {
//   margin: 0;
//   line-height: @modal-title-line-height;
// }

// // Modal body
// // Where all modal content resides (sibling of .modal-header and .modal-footer)
// .modal-body {
//   position: relative;
//   padding: @modal-inner-padding;
// }

// // Footer (for actions)
// .modal-footer {
//   padding: @modal-inner-padding;
//   text-align: right; // right align buttons
//   border-top: 0;
//   &:extend(.clearfix all); // clear it in case folks use .pull-* classes on buttons

//   // Properly space out buttons
//   .btn + .btn {
//     margin-left: 5px;
//     margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
//   }
//   // but override that for button groups
//   .btn-group .btn + .btn {
//     margin-left: -1px;
//   }
//   // and override it for block buttons as well
//   .btn-block + .btn-block {
//     margin-left: 0;
//   }
// }

// // Measure scrollbar width for padding body during modal show/hide
// .modal-scrollbar-measure {
//   position: absolute;
//   top: -9999px;
//   width: 50px;
//   height: 50px;
//   overflow: scroll;
// }


// // Scale up the modal
// @media (min-width: @screen-sm-min) {
//   // Automatically set modal's width for larger viewports
//   .modal-dialog {
//     width: @modal-md;
//     margin: 30px auto;
//   }
//   .modal-content {
//     .box-shadow(0 5px 15px rgba(0,0,0,.5));
//   }

//   // Modal sizes
//   .modal-sm { width: @modal-sm; }
// }

// @media (min-width: @screen-md-min) {
//   .modal-lg { width: @modal-lg; }
// }


// //
// // Tables
// // --------------------------------------------------


// table {
//   background-color: @table-bg;
// }

// .table {
//   width: 100%;
//   max-width: 100%;
//   margin-bottom: @line-height-computed;
//   border: 1px solid @table-border-color;

//   // Cells
//   > thead,
//   > tbody,
//   > tfoot {
//     > tr {
//       > th,
//       > td {
//         padding: @table-cell-padding;
//         line-height: @line-height-base;
//         vertical-align: top;
//         font-size: @table-header-size;
//         // border-top: 1px solid @table-border-color;
//       }
//     }
//   }

//   > thead {
//   	background-color: @table-header-bg;
//   	color:@table-header-text;
//   	padding: @table-header-padding;

//   	> tr > th {
//     	vertical-align: bottom;
//     	border-bottom: 1px solid @table-border-color;

//   		font-size: @table-header-size;	
//   		font-weight: @font-bold-weight;
//   	}
//   }

//   .table-hover {
//   	> tbody > tr:hover {
//     	background-color: @table-bg-hover;
//   	}
//   }
// }

// .table-responsive {
//   overflow-x: auto;
//   min-height: 0.01%; // Workaround for IE9 bug (see https://github.com/twbs/bootstrap/issues/14837)

//   @media screen and (max-width: @screen-xs-max) {
//     width: 100%;
//     margin-bottom: (@line-height-computed * 0.75);
//     overflow-y: hidden;
//     -ms-overflow-style: -ms-autohiding-scrollbar;
//     border: 1px solid @table-border-color;

//     // Tighten up spacing
//     > .table {
//       margin-bottom: 0;

//       // Ensure the content doesn't wrap
//       > thead,
//       > tbody,
//       > tfoot {
//         > tr {
//           > th,
//           > td {
//             white-space: nowrap;
//           }
//         }
//       }
//     }

//     // Special overrides for the bordered tables
//     > .table-bordered {
//       border: 0;

//       // Nuke the appropriate borders so that the parent can handle them
//       > thead,
//       > tbody,
//       > tfoot {
//         > tr {
//           > th:first-child,
//           > td:first-child {
//             border-left: 0;
//           }
//           > th:last-child,
//           > td:last-child {
//             border-right: 0;
//           }
//         }
//       }

//       // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
//       // chances are there will be only one `tr` in a `thead` and that would
//       // remove the border altogether.
//       > tbody,
//       > tfoot {
//         > tr:last-child {
//           > th,
//           > td {
//             border-bottom: 0;
//           }
//         }
//       }

//     }
//   }
// }

// .table-col-bordered{
	
// 					border-left: 1px solid @table-border-color;
// 					& :first-child{
// 					border-left: none;
// 					}
//  // Cells
//   > thead,
//   > tbody,
//   > tfoot {
//     > tr {
//       > th,
//       > td {
// 		border-left: 1px solid @table-border-color;
// 		// & :first-child{
// 		// border-left: none;
// 		// }
        
//       }
//     }
//   }


	
// }



// // Tabs
// // -------------------------

// // Give the tabs something to sit on

// .nav {
//   margin-bottom: 0;
//   padding-left: 0; // Override default ul/ol
//   list-style: none;
//   &:extend(.clearfix all);

//   > li {
//     position: relative;
//     display: block;

//     > a {
//       position: relative;
//       display: block;
//       padding: @nav-link-padding;
//       color: @link-color;

//       &:hover,
//       &:focus {
//         text-decoration: none;
//         color:@link-hover-color;
//         background-color: transparent;
//         border: 0;
//       }
//     }

//     // Disabled state sets text to gray and nukes hover/tab effects
//     &.disabled > a {
//       color: @nav-disabled-link-color;

//       &:hover,
//       &:focus {
//         color: @nav-disabled-link-hover-color;
//         text-decoration: none;
//         background-color: transparent;
//         cursor: @cursor-disabled;
//       }
//     }
//   }
//  }

// .nav-tabs {
//   border-bottom: 1px solid @nav-tabs-border-color;


//   > li {
//     float: left;
//     // Make the list-items overlay the bottom border
//     margin-bottom: -1px;

//     color: @link-color;
//     font-size: @nav-tabs-font-size;

//     > a {
//       border:0;
//     }

//     // Actual tabs (as links)
//     // > a {
//     //   margin-right: 2px;
//     //   line-height: @line-height-base;
//       // border: 1px solid transparent;
//       // border-radius: @border-radius-base @border-radius-base 0 0;
//       // &:hover {
//       //   border-color: @nav-tabs-link-hover-border-color @nav-tabs-link-hover-border-color @nav-tabs-border-color;
//       // }
//     // }

//     // Active state, and its :hover to override normal :hover
//     &.active > a {
//       &,
//       &:hover,
//       &:focus {
//         color: @nav-tabs-active-link-bottom-border-color;
//         // background-color: @nav-tabs-active-link-hover-bg;

//         border: 0;
//         // border-bottom-color: transparent;
//         border-bottom: 3px solid  @nav-tabs-active-link-bottom-border-color;
//         cursor: default;
//       }
//     }
//   }

// }


// //
// // Forms
// // --------------------------------------------------

// // WebKit-style focus

// .tab-focus() {
//   // Default
//   outline: thin dotted;
//   // WebKit
//   outline: 5px auto -webkit-focus-ring-color;
//   outline-offset: -2px;
// }

// .placeholder(@color) {
//   :-moz-placeholder {
//     color: @color;
//   }
//   ::-webkit-input-placeholder {
//     color: @color;
//   }
// }

// .form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
//   // Color the label and help text
//   .help-block,
//   .control-label,
//   .radio,
//   .checkbox,
//   .radio-inline,
//   .checkbox-inline,
//   &.radio label,
//   &.checkbox label,
//   &.radio-inline label,
//   &.checkbox-inline label  {
//     color: @text-color;
//   }
//   // Set the border and box shadow on specific inputs to match
//   .form-control {
//     border-color: @border-color;
//     .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
//     &:focus {
//       border-color: darken(@border-color, 10%);
//       @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%);
//       .box-shadow(@shadow);
//     }
//   }
//   // Set validation states also for addons
//   .input-group-addon {
//     color: @text-color;
//     border-color: @border-color;
//     background-color: @background-color;
//   }
//   // Optional feedback icon
//   .form-control-feedback {
//     color: @text-color;
//   }
// }


// // Form control focus state
// //
// // Generate a customized focus state and for any input with the specified color,
// // which defaults to the `@input-border-focus` variable.
// //
// // We highly encourage you to not customize the default value, but instead use
// // this to tweak colors on an as-needed basis. This aesthetic change is based on
// // WebKit's default styles, but applicable to a wider range of browsers. Its
// // usability and accessibility should be taken into account with any change.
// //
// // Example usage: change the default blue border and shadow to white for better
// // contrast against a dark gray background.
// .form-control-focus(@color: @input-border-focus) {
//   @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);
//   &:focus {
//     border-color: @color;
//     outline: 0;
//     .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}");
//   }
// }

// // Form control sizing
// //
// // Relative text size, padding, and border-radii changes for form controls. For
// // horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// // element gets special love because it's special, and that's a fact!
// .input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
//   height: @input-height;
//   padding: @padding-vertical @padding-horizontal;
//   font-size: @font-size;
//   line-height: @line-height;
//   border-radius: @border-radius;

//   select& {
//     height: @input-height;
//     line-height: @input-height;
//   }

//   textarea&,
//   select[multiple]& {
//     height: auto;
//   }
// }

// .box-sizing(@boxmodel) {
//   -webkit-box-sizing: @boxmodel;
//      -moz-box-sizing: @boxmodel;
//           box-sizing: @boxmodel;
// }


// fieldset {
//   padding: 0;
//   margin: 0;
//   border: 0;
//   // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
//   // so we reset that to ensure it behaves more like a standard block element.
//   // See https://github.com/twbs/bootstrap/issues/12359.
//   min-width: 0;
// }

// label {
//   display: inline-block;
//   max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
//   margin-bottom: 5px;
//   font-weight: @font-base-weight;
//   color:@label-color;
// }


// // Override content-box in Normalize (* isn't specific enough)
// input[type="search"] {
//   .box-sizing(border-box);
// }

// // Position radios and checkboxes better
// input[type="radio"],
// input[type="checkbox"] {
//   margin: 4px 0 0;
//   margin-top: 1px \9; // IE8-9
//   line-height: normal;
// }

// input[type="file"] {
//   display: block;
// }

// // Make range inputs behave like textual form controls
// input[type="range"] {
//   display: block;
//   width: 100%;
// }

// // Make multiple select elements height not fixed
// select[multiple],
// select[size] {
//   height: auto;
// }

// // Focus for file, radio, and checkbox
// input[type="file"]:focus,
// input[type="radio"]:focus,
// input[type="checkbox"]:focus {
//   .tab-focus();
// }


// .form-control {
//   display: block;
//   width: 100%;
//   height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
//   padding: @padding-base-vertical @padding-base-horizontal;
//   font-size: @font-size-base;
//   line-height: @line-height-base;
//   color: @input-color;
//   background-color: @input-bg;
//   background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
//   border: 1px solid @input-border;
//   border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
//   .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
//   .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

//   // Customize the `:focus` state to imitate native WebKit styles.
//   .form-control-focus();

//   // Placeholder
//   .placeholder(@gray-light);

//   // Unstyle the caret on `<select>`s in IE10+.
//   &::-ms-expand {
//     border: 0;
//     background-color: transparent;
//   }

//   // Disabled and read-only inputs
//   //
//   // HTML5 says that controls under a fieldset > legend:first-child won't be
//   // disabled if the fieldset is disabled. Due to implementation difficulty, we
//   // don't honor that edge case; we style them as disabled anyway.
//   &[disabled],
//   &[readonly],
//   fieldset[disabled] & {
//     background-color: @input-bg-disabled;
//     opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
//   }

//   &[disabled],
//   fieldset[disabled] & {
//     cursor: @cursor-disabled;
//   }

//   // Reset height for `textarea`s
//   textarea& {
//     height: auto;
//   }
// }


// //
// // Tooltips
// // --------------------------------------------------
// .reset-text() {
//   font-family: @font-family-base;
//   // We deliberately do NOT reset font-size.
//   font-style: normal;
//   font-weight: normal;
//   letter-spacing: normal;
//   line-break: auto;
//   line-height: @line-height-base;
//   text-align: left; // Fallback for where `start` is not supported
//   text-align: start;
//   text-decoration: none;
//   text-shadow: none;
//   text-transform: none;
//   white-space: normal;
//   word-break: normal;
//   word-spacing: normal;
//   word-wrap: normal;
// }


// // Base class

// .tooltip {
//   position: absolute;
//   z-index: @zindex-tooltip;
//   display: block;
//   // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
//   // So reset our font and text properties to avoid inheriting weird values.
//   .reset-text();
//   font-size: @font-size-small;

//   .opacity(0);

//   &.in     { .opacity(@tooltip-opacity); }
//   &.top    { margin-top:  -3px; padding: @tooltip-arrow-width 0; }
//   &.right  { margin-left:  3px; padding: 0 @tooltip-arrow-width; }
//   &.bottom { margin-top:   3px; padding: @tooltip-arrow-width 0; }
//   &.left   { margin-left: -3px; padding: 0 @tooltip-arrow-width; }
// }

// .tooltip-inner {
//   max-width: @tooltip-max-width;
//   padding: 3px 8px;
//   color: @tooltip-color;
//   text-align: center;
//   background-color: @tooltip-bg;
//   border-radius: @border-radius-base;
// }

// // Arrows
// .tooltip-arrow {
//   position: absolute;
//   width: 0;
//   height: 0;
//   border-color: transparent;
//   border-style: solid;
// }
// // Note: Deprecated .top-left, .top-right, .bottom-left, and .bottom-right as of v3.3.1
// .tooltip {
//   &.top .tooltip-arrow {
//     bottom: 0;
//     left: 50%;
//     margin-left: -@tooltip-arrow-width;
//     border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
//     border-top-color: @tooltip-arrow-color;
//   }
//   &.top-left .tooltip-arrow {
//     bottom: 0;
//     right: @tooltip-arrow-width;
//     margin-bottom: -@tooltip-arrow-width;
//     border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
//     border-top-color: @tooltip-arrow-color;
//   }
//   &.top-right .tooltip-arrow {
//     bottom: 0;
//     left: @tooltip-arrow-width;
//     margin-bottom: -@tooltip-arrow-width;
//     border-width: @tooltip-arrow-width @tooltip-arrow-width 0;
//     border-top-color: @tooltip-arrow-color;
//   }
//   &.right .tooltip-arrow {
//     top: 50%;
//     left: 0;
//     margin-top: -@tooltip-arrow-width;
//     border-width: @tooltip-arrow-width @tooltip-arrow-width @tooltip-arrow-width 0;
//     border-right-color: @tooltip-arrow-color;
//   }
//   &.left .tooltip-arrow {
//     top: 50%;
//     right: 0;
//     margin-top: -@tooltip-arrow-width;
//     border-width: @tooltip-arrow-width 0 @tooltip-arrow-width @tooltip-arrow-width;
//     border-left-color: @tooltip-arrow-color;
//   }
//   &.bottom .tooltip-arrow {
//     top: 0;
//     left: 50%;
//     margin-left: -@tooltip-arrow-width;
//     border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
//     border-bottom-color: @tooltip-arrow-color;
//   }
//   &.bottom-left .tooltip-arrow {
//     top: 0;
//     right: @tooltip-arrow-width;
//     margin-top: -@tooltip-arrow-width;
//     border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
//     border-bottom-color: @tooltip-arrow-color;
//   }
//   &.bottom-right .tooltip-arrow {
//     top: 0;
//     left: @tooltip-arrow-width;
//     margin-top: -@tooltip-arrow-width;
//     border-width: 0 @tooltip-arrow-width @tooltip-arrow-width;
//     border-bottom-color: @tooltip-arrow-color;
//   }
// }

/* offset-x | offset-y | blur-radius | spread-radius | color */


// // Core variables and mixins
// @import "variables.less";
// @import "mixins.less";

// // // Reset and dependencies
// // @import "normalize.less";
// // @import "print.less";
// // @import "glyphicons.less";

// // Core CSS
// @import "scaffolding.less";
// @import "type.less";
// @import "code.less";
// @import "grid.less";
// @import "tables.less";
// @import "forms.less";
// @import "buttons.less";

// // Components
// @import "component-animations.less";
// @import "dropdowns.less";
// @import "button-groups.less";
// @import "input-groups.less";
// @import "navs.less";
// @import "navbar.less";
// @import "breadcrumbs.less";
// @import "pagination.less";
// @import "pager.less";
// @import "labels.less";
// @import "badges.less";
// @import "jumbotron.less";
// @import "thumbnails.less";
// @import "alerts.less";
// @import "progress-bars.less";
// @import "media.less";
// @import "list-group.less";
// @import "panels.less";
// @import "responsive-embed.less";
// @import "wells.less";
// @import "close.less";

// // Components w/ JavaScript
// @import "modals.less";
// @import "tooltip.less";
// @import "popovers.less";
// @import "carousel.less";

// Utility classes
// @import "utilities.less";
// @import "responsive-utilities.less";
